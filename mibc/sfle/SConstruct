# -*- mode:python -*-
import os
import sys
import json

from mibc import (
    models
)

from mibc.sfle import (
    sfle,
    sfleoo,
    pathways,
    workflows,
    MIBC_ENV_VAR,
)


_env = DefaultEnvironment()
Decider("timestamp-newer")
env = None

def _getenv(project=None):
    global env
    if env is None:
        if project is None:
            here = os.path.abspath('.')
            env= sfleoo.ooSfle(
                fileDirInput='.',
                fileDirOutput=os.path.join(here, "mibc_products"),
                fileDirTmp=(here, "mibc_tmp")
            )
        else:
            env = sfleoo.ooSfle(
                fileDirInput=project.path,
                fileDirOutput=os.path.join(project.path, 'mibc_products'),
                fileDirTmp=os.path.join(project.path, "mibc_tmp")
            )

    return env

target = None
def _gettarget():
    global target
    if target is None:
        target = json.loads(os.environ[MIBC_ENV_VAR])

    return target


def run_workflow():
    t = _gettarget()
    workflow, input_files = t["workflow"], t["input_files"]

    if workflow not in workflows.all():
        print >> sys.stderr, "The workflow %s does not exist" %(workflow)
        sys.exit(1)
    else:
        workflow_func = workflows.all()[workflow]

    missing_files = [ f for f in input_files 
                      if not os.path.exists(f) ]
    if missing_files:
        print >> sys.stderr, "No such file or directory: %s" %(
            "\n".join(missing_files))
        sys.exit(1)

    return workflow_func(_getenv(), input_files)


def build_directory():
    if not os.path.exists(_gettarget()["directory"]):
        print >> sys.stderr, "The targeted directory does not exist: %s" \
            %(_gettarget())
        sys.exit(1)

    if not os.path.isdir(_gettarget()["directory"]):
        print >> sys.stderr, "The target 'directory' is not a directory: %s" \
            %(_gettarget())
        sys.exit(1)

    try:
        project = models.Project.from_path(_gettarget()["directory"])
    except Exception, e:
        print >> sys.stderr, "Unable to instantiate target project: %s" \
            %(_gettarget()["directory"])
        raise e
    
    if getattr(project, "16s_data", None) is None:
        return pathways.path_wgs(_getenv(project), project)
    else:
        return pathways.path_16s(_getenv(project), project)


if MIBC_ENV_VAR not in os.environ:
    print >> sys.stderr, "No target specified, " \
        "use the environment variable %s to point at a " \
        "specific directory to build" %(MIBC_ENV_VAR)
    sys.exit(1)

if "workflow" in _gettarget():
    to_build = run_workflow()
else:
    to_build = build_directory()

Default(to_build)
